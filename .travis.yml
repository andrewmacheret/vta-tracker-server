sudo: required

language: node_js

node_js:
  - '6'

addons:
  ssh_known_hosts: servers.andrewmacheret.com

env:
  global:
    # DOCKER_USERNAME and DOCKER_PASSWORD
    - secure: "gpOPmFmeGOkNlHk0jlID0vmVFJhvLQPbV+VNIwdIIoqgiuCrQPzPRGC/3j1CbrFDkqTmRv7wPW8uqlXDt61h8tDa2TVsKZOTbk9ugI1djlndYy9ospS5PAc+w0BsMKkx6OFngxEYtbmsezBFb4dryBpDJjpnlvuIZxc3qDULqyxGKeK04eQ94l6mJ4mXmjmD/iGcHKh3JImmrtUPdB3ZUTViMQ541UBcCX0amSrONlG80Png5nOfiVrB6MnzyVq3X5/xsQMkShOESNCssYxdbZc/llGI11pMuLDq1MifSWIqFyDxu6EtOM25K61YHgkeDBBe6e3VA3/QNwxl41AuYYuvPg28uyPnQpgdYDeO/c0k+2q0GEHs847BmCVkO3sEwD+1xJvyWfcws1pYrQ7M8na78X2OoOKabuqDkl8TgmdP+XV2wTyB/I4O4pMT6QkOTSQGTNJo2K61h0hLXpArWQ83GEwHWQDT/eDMm0NZUH/EJI9f+CVrDP++TxC30LImzkszT9gy5ns8ImrkAOyPgqpPTud3adf/yhjLigBC1NQRHmztHFkibqdAK1eTX1ZlcD4iJOX9F7+CtWnz3xkZBvohgglwxZX87g9Cl+99pBWnBhdYoieIW6nADIk4dfdiWiiKJRhQntsQ8a8PVl5z+k34vlW5HZHqC21p7N9tv2k="
    - secure: "AHDDGyMqNDum7vxV7aa8yvM3/eNKoYSTjsgWteBjkbEr7Ry22IQ+VaMsSmWXVc9309ZX9KW53CBjL7LU4UmnMQBei32hmiygBTTYZBxX8WYS3foxy6rFnSZmaZtTI7P7Ef3U2hwE9WaD7TvKt8bydBJs3vBavlv/cvFMriOLnF1QOm73mC35zhUKoULFtsuw+euHW12PcgxNSYbf8BHm/IBv6zR4BStc3x3mJci9G6K7lZfiN62sWoMQbNLiULydn/A2U/BoQK2J20D4ZFb5OmmzDvFfYPNV2/WswMbToNN5HMxCuvxvk+X9kuTbATRu9N4yEHc3L+Aq/mTrKJBMz0wJyE0TH2AgmUulK9AO+yZPkWsj+BinjI6jPJdnfAfZ23ntyTXjMVDahj73mH5K9H/5r6sXKj/ManuoLQs2gtuAdLKfELjk8Iz2tUO1oVhMEqL57KiNclY0VlCbyeA9506o7zErjxh6jt8k1DAFC5cS3GI1X4dpqkZa45tmC1AEDZFy6A1i++1hrVw9YjnX6T/Ic3YA+zNf39kmcZWKvWGyCVVGTGArlvhPFM6WVgWnnyOuk6hLBgmNmcaeP6ybWEd0N+xG994By3qlYaozIajWhdnoSEqNopN+KvHkKdzce9P4SsNuXYar67SWlYvKe6YEnRB/cfCHYtl4HRENBIQ="
    - SERVICE_NAME='vta-tracker'
    - CONTAINER_NAME='vta-tracker-server'
    - VERSION=1.0
    - TEST_PORT='9999'
    - MYSQL_ROOT_PASSWORD='test-password'

services:
  - docker

install:
  # install dependencies
  - set -e
  - cd app && npm install && cd ..

script:
  # build and test
  - set -e
  - docker build -t "${DOCKER_USERNAME}/${CONTAINER_NAME}":latest .
  - docker run -d --name mysql --env "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}" mysql:5.7
  - sleep 5
  - docker logs mysql
  - docker run -d --name "${CONTAINER_NAME}" -p "${TEST_PORT}":80 --link mysql:mysql --env "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}" "${DOCKER_USERNAME}/${CONTAINER_NAME}" nodejs gtfs-server.js
  - docker exec -t "${CONTAINER_NAME}" ./setup.sh

  - test "$( curl -sI localhost:"${TEST_PORT}/find_routes" | head -1 | sed 's/\r$//' )" == "HTTP/1.1 200 OK"

  - docker rm -f "${CONTAINER_NAME}"
  - docker rm -f mysql

after_success:
  # push to docker hub
  - set -e
  - docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"
  - docker tag "${DOCKER_USERNAME}/${CONTAINER_NAME}":latest "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}"
  - docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":latest
  - docker push "${DOCKER_USERNAME}/${CONTAINER_NAME}":"${VERSION}"
  # ssh deploy
  #- openssl aes-256-cbc -K $encrypted_f58f5f074197_key -iv $encrypted_f58f5f074197_iv -in id_rsa_a1-server.enc -out "${TRAVIS_BUILD_DIR}/id_rsa_a1-server" -d
  #- eval "$(ssh-agent -s)"
  #- chmod 600 "${TRAVIS_BUILD_DIR}/id_rsa_a1-server"
  #- ssh-add "${TRAVIS_BUILD_DIR}/id_rsa_a1-server"
  #- ssh core@servers.andrewmacheret.com "cd ~/servers/a1-server && docker-compose pull ${SERVICE_NAME} && docker-compose up -d --force-recreate ${SERVICE_NAME} && (docker rmi \$(docker images --filter dangling=true -q 2>/dev/null) 2>/dev/null || true)"
